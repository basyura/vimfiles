set background=light

execute 'colorscheme ' . get(g:, 'my_color_scheme', 'wombat')

""""""""""""""""""""""""""""""""""
"           settings             "
""""""""""""""""""""""""""""""""""
if expand("%") == ".git/COMMIT_EDITMSG"
  finish
endif

" setting {{{

set guioptions-=rL
set guioptions-=m
" ビジュアル選択(D&D他)を自動的にクリップボードへ (:help guioptions_a)
"set guioptions+=a
" クリップボード
set clipboard+=unnamed
" ツールバー非表示
set guioptions-=T

set guitablabel=%t

set linespace=5
" コマンドラインの高さ
set cmdheight=1

" }}}

if has('vim_starting')
  for platform in ['win32', 'mac', 'unix']
    if has(platform)
      execute 'source ~/.vim/rc/starting/' . platform . '.vim'
      break
    endif
  endfor
endif

"*******************************************************
"*                   保存・終了                        *
"*******************************************************
" gui の時だけ。Terminal ではやらない。
command! -nargs=? -bang WQ  call s:WriteClose('<bang>')
function! s:WriteClose(bang)
  if a:bang == ''
    write | bd
  else
    write! | bd!
  endif
endfunction

if g:tab_mode
  AlterCommand q  tabclose
else
  AlterCommand q  Kwbd
endif
AlterCommand wq WQ

""""""""""""""""""""""""""""""""""
"             other              "
""""""""""""""""""""""""""""""""""
nnoremap <Space>s. :<C-u>source $MYVIMRC<Enter>:<C-u>source $MYGVIMRC<Enter>

hi WarningMsg guifg=bg

if filereadable(expand('~/.vim/rc/highlight/' . g:colors_name . '.vim'))
  execute 'source ~/.vim/rc/highlight/' . g:colors_name . '.vim'
endif


if filereadable($HOME . '/.gvimrc_local_after')
  source ~/.gvimrc_local_after
endif
" vim: foldmethod=marker
